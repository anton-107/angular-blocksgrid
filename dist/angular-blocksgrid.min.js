/*!
 * angular-blocksgrid - AngularJS directive for creating grids and allowing users to drag-and-drop elements of this grid
 * v0.1.0
 * 
 * copyright Anton Nekipelov 2013
 * MIT License
*/
!function(){angular.module("angular-blocksgrid",[])}(),function(){angular.module("angular-blocksgrid").directive("blocksgrid",function(){return{restrict:"E",template:"<div ng-repeat='row in grid' class='container_12 {{ dragState }}'><div class='row' droppable ondropfinished='onBlockDropInRow(row)'><div ng-repeat='column in row' class='grid_{{ 12 / row.length}}'><div ng-repeat='block in column'><div class='draggable-block' draggable droppable ondragstarted='onBlockDrag(block)' droppable, ondropfinished='onBlockDrop(block)', data-hashkey='{{block.$$hashKey}}'><div ng-bind-html-unsafe='block.template'></div></div></div></div><div class='clearfix'></div></div></div>",controller:function(a){a.changeDragState=function(b){a.dragState=b}}}})}(),function(){angular.module("angular-blocksgrid").directive("draggable",function(){return{restrict:"A",link:function(a,b,c){var d=document.createElement("div");d.className="drag-handle",b.append(d),b.attr("draggable",!0),b.addClass("draggable-block");var e=!1;b.bind("mousedown",function(a){e=a.target}),b.bind("dragstart",function(b){return d.contains(e)?(b.dataTransfer&&b.dataTransfer.setData&&b.dataTransfer.setData("text/plain","This text may be dragged"),a.$apply(c.ondragstarted),void 0):(b.preventDefault(),void 0)}),b.bind("selectstart",function(){return this.dragDrop&&this.dragDrop(),!1}),b.bind("dragend",function(){a.$apply(c.ondropfinished)})}}})}(),function(){"use strict";angular.module("angular-blocksgrid").directive("droppable",function(a){return{restrict:"A",link:function(b,c,d){c.addClass("has-dropzones");var e=function(a,b){return String(a).replace("(block)",'(block, "'+b+'")').replace("(row)",'(row, "'+b+'")')},f=function(a,b){return"<div dropzone class='dropzone dropzone-"+b+"' ondropfinished='"+e(a.ondropfinished,b)+"' ></div>"},g=a(f(d,"top"))(b),h=a(f(d,"bottom"))(b),i=a(f(d,"left"))(b),j=a(f(d,"right"))(b);c.append(g),c.append(h),c.append(i),c.append(j)}}})}(),function(){"use strict";angular.module("angular-blocksgrid").directive("dropzone",function(){return{restrict:"A",link:function(a,b,c){b.bind("dragover",function(a){a.preventDefault(),a.stopPropagation(),b.addClass("over")}),b.bind("dragleave",function(){b.removeClass("over")}),b.bind("drop",function(d){d.preventDefault(),d.stopPropagation(),a.$apply(c.ondropfinished),b.removeClass("over")})}}})}(),function(){"use strict";var a=function(a){var b="state-dragmode",c="state-isdragged",d=null;this.setBlockInTransit=function(e,f){d=f,e.changeDragState(b);var g=a[0].querySelectorAll(".draggable-block[data-hashkey='"+d.$$hashKey+"']");angular.element(g[0]).addClass(c)},this.completeDrop=function(b,e,f,g){if(b.changeDragState(""),null!==d){var h=a[0].querySelectorAll(".dragabble-block[data-hashkey='"+d.$$hashKey+"']");if(angular.element(h).removeClass(c),null!==f&&d!==f){var i=!1;switch(g){case"top":i=e.insertAbove(f,d,!0);break;case"bottom":i=e.insertBelow(f,d,!0);break;case"left":i=e.insertAsideLeft(f,d,!0);break;case"right":i=e.insertAsideRight(f,d,!0)}i&&(e.cleanEmptyCells(),e.cleanEmptyRows())}d=null}},this.completeDropInRow=function(a,b,c,e){if(a.changeDragState(""),null!==d){if(null!==c){var f=!1;switch(e){case"top":f=b.insertAboveRow(c,d,!0);break;case"bottom":f=b.insertBelowRow(c,d,!0)}f&&(b.cleanEmptyCells(),b.cleanEmptyRows())}d=null}}};angular.module("angular-blocksgrid").service("$dragAndDrop",a)}(),function(){var a=function(){function a(a,b){return{init:function(c){var d=a(c.$id);c.grid=d.data,c.addBlockToGrid=function(a){d.addBlock.call(d,a)},c.onBlockDrag=function(a){b.setBlockInTransit(c,a)},c.onBlockDrop=function(a,e){b.completeDrop(c,d,a,e)},c.onBlockDropInRow=function(a,e){b.completeDropInRow(c,d,a,e)}}}}this.$get=a,a.$inject=["$blocksgridModel","$dragAndDrop","$controller"]};angular.module("angular-blocksgrid").provider("$blocksgrid",a)}(),function(){var a=function(){this.data=[],this.maximumNumberOfColumns=4};a.prototype={addBlock:function(a){this.data.push([[a]])},findRow:function(a){for(var b=this.data,c=0,d=b.length;d>c;c++)for(var e=0,f=b[c].length;f>e;e++)for(var g=0,h=b[c][e].length;h>g;g++){var i=b[c][e][g];if(i===a)return b[c]}return null},findBlockCoordinates:function(a){for(var b=this.data,c=0,d=b.length;d>c;c++)for(var e=0,f=b[c].length;f>e;e++)for(var g=0,h=b[c][e].length;h>g;g++){var i=b[c][e][g];if(i===a)return[c,e,g]}return null},getRowIndex:function(a){for(var b=0,c=this.data.length;c>b;b++)if(this.data[b]===a)return b;return null},removeBlock:function(a){var b=this.findBlockCoordinates(a);null!==b&&this.data[b[0]][b[1]].splice(b[2],1)},cleanEmptyRows:function(){for(var a=this.data,b=a.length;b--;)0===a[b].length&&a.splice(b,1)},cleanEmptyCells:function(){for(var a=this.data,b=0,c=a.length;c>b;b++)for(var d=a[b].length;d--;)0===a[b][d].length&&a[b].splice(d,1)},insertAbove:function(a,b,c){var d=this.findBlockCoordinates(a);return null!==d&&(c&&this.removeBlock(b),this.data[d[0]][d[1]].splice(d[2],0,b)),!0},insertBelow:function(a,b,c){var d=this.findBlockCoordinates(a);return null!==d&&(c&&this.removeBlock(b),this.data[d[0]][d[1]].splice(d[2]+1,0,b)),!0},insertAsideLeft:function(a,b,c){var d=this.findRow(a);if(null!==d&&d.length<this.maximumNumberOfColumns){var e=this.findBlockCoordinates(a);if(null!==e)return c&&this.removeBlock(b),this.data[e[0]].splice(e[1],0,[b]),!0}return!1},insertAsideRight:function(a,b,c){var d=this.findRow(a);if(null!==d&&d.length<this.maximumNumberOfColumns){var e=this.findBlockCoordinates(a);if(null!==e)return c&&this.removeBlock(b),this.data[e[0]].splice(e[1]+1,0,[b]),!0}return!1},insertAboveRow:function(a,b,c){var d=this.getRowIndex(a);return null!==d&&(c&&this.removeBlock(b),this.data.splice(d,0,[[b]])),!0},insertBelowRow:function(a,b,c){var d=this.getRowIndex(a);return null!==d&&(c&&this.removeBlock(b),this.data.splice(d+1,0,[[b]])),!0}};var b=function(){function b(){return function(b){return c[b]||(c[b]=new a),c[b]}}var c={};this.$get=b};angular.module("angular-blocksgrid").provider("$blocksgridModel",b)}();
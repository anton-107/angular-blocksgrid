/*!
 * angular-blocksgrid - AngularJS directive for creating grids and allowing users to drag-and-drop elements of this grid
 * v0.1.0
 * 
 * copyright Anton Nekipelov 2013
 * MIT License
*/
!function(){angular.module("angular-blocksgrid",[])}(),function(){angular.module("angular-blocksgrid").directive("blocksgrid",function(){return{restrict:"E",template:"<div ng-repeat='row in grid' class='container_12'><div class='row'><div ng-repeat='column in row' class='grid_{{ 12 / row.length}}'><div ng-repeat='block in column'><div draggable><div ng-bind-html-unsafe='block.template'></div></div></div></div></div></div>"}})}(),function(){angular.module("angular-blocksgrid").directive("draggable",function(){return{restrict:"A",link:function(a,b,c){var d=document.createElement("div");d.className="drag-handle",b.append(d),b.attr("draggable",!0),b.addClass("draggable-block");var e=!1;b.bind("mousedown",function(a){e=a.target}),b.bind("dragstart",function(b){return d.contains(e)?(b.dataTransfer&&b.dataTransfer.setData&&b.dataTransfer.setData("text/plain","This text may be dragged"),a.$apply(c.ondragstarted),void 0):(b.preventDefault(),void 0)}),b.bind("selectstart",function(){return this.dragDrop&&this.dragDrop(),!1}),b.bind("dragend",function(){a.$apply(c.ondropfinished)})}}})}(),function(){var a=function(){function a(a){return{init:function(b){var c=a(b.$id);b.grid=c.data,b.addBlockToGrid=function(a){c.addBlock.call(c,a)},b.onBlockDrag=function(a){dragAndDrop.setBlockInTransit(a)},b.onBlockDrop=function(a,b){dragAndDrop.completeDrop(a,b)},b.onBlockDropInRow=function(a,b){dragAndDrop.completeDropInRow(a,b)}}}}this.$get=a,a.$inject=["$blocksgridModel"]};angular.module("angular-blocksgrid").provider("$blocksgrid",a)}(),function(){var a=function(){this.data=[]};a.prototype={addBlock:function(a){this.data.push([[a]])}};var b=function(){function b(){return function(b){return c[b]||(c[b]=new a),c[b]}}var c={};this.$get=b};angular.module("angular-blocksgrid").provider("$blocksgridModel",b)}();